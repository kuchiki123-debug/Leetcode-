给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。

示例:
输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3
输出: [3,3,5,5,6,7] 
解释: 
滑动窗口的位置                最大值
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7

1.（暴力法）
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(nums.empty())return {};
        int len = nums.size();
        int Max = INT_MIN;
        vector<int>result;
        for(int i = 0;i <= len - k;i++)
        {
            for(int j = i;j < i + k;j++)
            {
                Max = max(Max,nums[j]);
            }
            result.push_back(Max);
            Max = INT_MIN;
        }
        return result;
    }
};

2.（滑动窗口）
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(nums.empty())return {};
        int n = nums.size();
        priority_queue<pair<int,int>>q;
        for(int i = 0;i < k;i++)
        {
            q.emplace(nums[i],i);
        }
        vector<int>ans = {q.top().first};
        for(int i = k;i < n;i++)
        {
            q.emplace(nums[i],i);
            while(q.top().second <= i - k)
            {
                q.pop();
            }
            ans.push_back(q.top().first);
        }
        return ans;
    }
};
