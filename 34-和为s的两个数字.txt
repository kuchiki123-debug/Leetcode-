输入一个递增排序的数组和一个数字s，在数组中查找两个数，
使得它们的和正好是s。如果有多对数字的和等于s，则输出任意一对即可。

示例 1：
输入：nums = [2,7,11,15], target = 9
输出：[2,7] 或者 [7,2]

示例 2：
输入：nums = [10,26,30,31,47,60], target = 40
输出：[10,30] 或者 [30,10]

1.二分查找
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
        for(int i = 0;i < nums.size();i++)
        {
            int per = 0;
            int last = nums.size() - 1;
            int mid = 0;
            while(per <= last)
            {
                mid = (last + per) / 2;
                if(nums[mid] + nums[i] == target)
                {
                    ans.push_back(nums[mid]);
                    ans.push_back(nums[i]);
                    return ans;
                }
                else if(nums[mid] + nums[i] < target)
                {
                    per = mid + 1;
                }
                else
                {
                    last = mid - 1;
                }
            }
        }
        return ans;
    }
};