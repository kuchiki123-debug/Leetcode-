从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。

例如:
给定二叉树: [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：
[
  [3],
  [9,20],
  [15,7]
]

1.深度优先遍历（队列）
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>result;
        queue<TreeNode*>qe;
        if(!root)
        {
            return {};
        }
        qe.push(root);
        while(!qe.empty())
        {
            int len = qe.size();
            vector<int>ans;
            for(int i = 0;i < len;i++)
            {
                if(qe.front()->left)
                {
                    qe.push(qe.front()->left);
                }
                if(qe.front()->right)
                {
                    qe.push(qe.front()->right);
                }
                ans.push_back(qe.front()->val);
                qe.pop();
            }
            result.push_back(ans);
        }
        return result;
    }
};