给你二叉树的根节点 root 和一个整数目标和 targetSum ，
找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。
叶子节点 是指没有子节点的节点。

示例 1：
输入：root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22
输出：[[5,4,11,2],[5,8,4,5]]

示例 2：
输入：root = [1,2,3], targetSum = 5
输出：[]

示例 3：
输入：root = [1,2], targetSum = 0
输出：[]

1.深度优先遍历
class Solution {
public:
    vector<vector<int>>ans;
    vector<int>res;

    void dfs(TreeNode* root,int target)
    {
        if(root == nullptr)
        {
            return;
        }
        res.push_back(root->val);
        target = target - root->val;
        if(root->left == nullptr && root->right == nullptr && target == 0)
        {
            ans.push_back(res);
        }
        dfs(root->left,target);
        dfs(root->right,target);
        res.pop_back();
    }

    vector<vector<int>> pathSum(TreeNode* root, int target) {
        dfs(root,target);
        return ans;
    }
};