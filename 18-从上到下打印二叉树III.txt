请实现一个函数按照之字形顺序打印二叉树，
即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，
第三行再按照从左到右的顺序打印，其他行以此类推。

例如:
给定二叉树: [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：
[
  [3],
  [20,9],
  [15,7]
]

1.
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>result;
        queue<TreeNode*>qe;
        if(root == NULL)
        {
            return {};
        }
        qe.push(root);
        int low = 1;
        while(!qe.empty())
        {
            int len = qe.size();
            vector<int>ans;
            for(int i = 0;i < len;i++)
            {
                ans.push_back(qe.front()->val);
                if(qe.front()->left)
                {
                    qe.push(qe.front()->left);
                }
                if(qe.front()->right)
                {
                    qe.push(qe.front()->right);
                }
                qe.pop();
            }
            if(low % 2 == 0)
            {
                reverse(ans.begin(),ans.end());
                result.push_back(ans);
            }else
            {
                result.push_back(ans);
            }
            low = low + 1;
        }
        return result;
    }
};