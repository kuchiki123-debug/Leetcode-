请实现一个函数，用来判断一棵二叉树是不是对称的。
如果一棵二叉树和它的镜像一样，那么它是对称的。

例如，二叉树 [1,2,2,3,4,4,3] 是对称的。
    1
   / \
  2   2
 / \ / \
3  4 4  3
但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:
    1
   / \
  2   2
   \   \
   3    3

示例 1：
输入：root = [1,2,2,3,4,4,3]
输出：true

示例 2：
输入：root = [1,2,2,null,3,null,3]
输出：false

1.递归
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(!root)
        {
            return true;
        }else
        {
            return isSymmetric2(root->left,root->right);
        }
    }

    bool isSymmetric2(TreeNode* l,TreeNode* r)
    {
        if(!l && !r)
        {
            return true;
        }
        if(!l || !r || l->val != r->val)
        {
            return false;
        }
        return isSymmetric2(l->left,r->right) && isSymmetric2(l->right,r->left);
    }
};