数字以0123456789101112131415…的格式序列化到一个字符序列中。、
在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。

请写一个函数，求任意第n位对应的数字。

示例 1：
输入：n = 3
输出：3

示例 2：
输入：n = 11
输出：0

1.
class Solution {
public:
    int findNthDigit(int n) {
        // 当前位数，比如1-9是1位，10-99是两位，100-999是三位
        int digit = 1;
        // 确定当前位数的起始数字
        long long start = 1;
        // 当前位数的数字有多少位数字，比如位数为1，则数字有9位，123456789
        // 位数为2，则数字有90位，101112……99，共有9 * 10 * 2 = 180位
        long long cnt = 9; 
        // 做题思路：
        // 1. 确定n所在的位数
        // 2. 确定n所在的数字
        // 3. 确定n所在位的数字 
        while (n > cnt) {
            n -= cnt;
            // 位数不断累加
            ++digit;
            // 开始的数字为1，10，100……以此类推
            start *= 10;
            // 位数的计算公式：当前位数数字的数量和乘位数，比如2位数，有90个数，90*2=180
            cnt = 9 * start * digit;
        }
        // 现在n <= cnt，根据计算的位数来确认当前的数字，对digit整除得到是当前位的第几个数字
        // n是一个大于0的数，而找数字要从第零个开始找，因此对n做-1处理
        // 比如最开始n = 10，减去9后变成了1，这意味着n是2位数的第一个数字，即10 + (1 - 1) = 10
        n--;
        int num = start + n / digit;
        // 现在确定最后的答案，所有的数字的按照位数进行循环，n对位数求余就是它在自己的数字的位置
        // 比如最开始n = 10，根据上述规则得到了num = 10，（n - 1）%2==0，所以是1，也就是10里面第零个位置的数字
        int ans = to_string(num)[n % digit] - '0';
        return ans;
    }
};